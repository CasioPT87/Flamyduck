name: cloudrun-deploy
on:
  push:
    branches:
      - main
jobs:
  # rspec-test:
  #   name: RSpec
  #   runs-on: ubuntu-latest
  #   services:
  #     mysql:
  #       image: mysql:5.7
  #       ports:
  #         - 3306
  #       env:
  #         MYSQL_ROOT_PASSWORD: root
  #       options: --health-cmd "mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 30
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-ruby@v1
  #       with:
  #         ruby-version: 2.7.2
  #     - uses: actions/cache@v2
  #       with:
  #         path: vendor/bundle
  #         key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-gems-   

  #     - name: Install dependencies
  #       run: |
  #         gem install bundler
  #         bundler install
  #     - name: Verify MySQL connection from host
  #       run: |
  #         sudo apt-get install -y mysql-client libmysqlclient-dev
  #         mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }} -uroot -proot -e "SHOW GRANTS FOR 'root'@'localhost'"
  #         mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }} -uroot -proot mysql
  #     - name: Create database
  #       env:
  #         MYSQL_USER: root
  #         MYSQL_PASSWORD: root
  #         MYSQL_DATABASE_TEST: app_test
  #         MYSQL_ROOT_PASSWORD: root
  #         MYSQL_HOST: 127.0.0.1
  #         RAILS_ENV: test
  #         # tell Rails to use proper port for MySQL
  #         DB_PORT: ${{ job.services.mysql.ports[3306] }}  
  #       run: |
  #         sudo service mysql start
  #         RAILS_ENV=test bundler exec rails db:create
  #         RAILS_ENV=test bundler exec rails db:migrate
  #     - name: Run tests
  #       env:
  #         MYSQL_USER: root
  #         MYSQL_PASSWORD: root
  #         MYSQL_DATABASE_TEST: app_test
  #         MYSQL_ROOT_PASSWORD: root
  #         MYSQL_HOST: 127.0.0.1
  #         RAILS_ENV: test
  #         # tell Rails to use proper port for MySQL
  #         DB_PORT: ${{ job.services.mysql.ports[3306] }}  
  #       run: RAILS_ENV=test bundler exec rspec spec
  #     - name: Upload coverage results    
  #       uses: actions/upload-artifact@master
  #       if: always()
  #       with:
  #         name: coverage-report
  #         path: coverage
          
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    # needs: rspec-test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Cache gems
      uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}

    # Setup gcloud CLI
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
    
    # Configure Docker with Credentials
    - name: Configure Docker
      run: |
        gcloud auth configure-docker
      
    # Build the Docker image
    - name: Build & Publish
      env: 
        RAILS_PRODUCTION_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      run: |
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APPLICATION }}:${{  github.sha }} .
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APPLICATION }}:${{  github.sha }}
      
    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      uses: google-github-actions/deploy-cloudrun@main
      with:
        image: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APPLICATION }}:${{  github.sha }}
        service: github-action-deploy
        region: europe-west1 